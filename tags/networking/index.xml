<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Networking on zhengxin</title><link>https://zhengxin.online/tags/networking/</link><description>Recent content in Networking on zhengxin</description><generator>Hugo</generator><language>en-us</language><copyright>Â© zhengxin</copyright><lastBuildDate>Sun, 28 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://zhengxin.online/tags/networking/index.xml" rel="self" type="application/rss+xml"/><item><title>Explore Kubernetes Design inspired by Borg</title><link>https://zhengxin.online/posts/borg/</link><pubDate>Sun, 28 Apr 2024 00:00:00 +0000</pubDate><guid>https://zhengxin.online/posts/borg/</guid><description>Google released a detailed paper on Borg in 2015, titled Large-scale cluster management at Google with Borg. Borg plays a vital role in managing clusters in Google, overseeing numerous machines, efficiently distributing workloads among them, and ensuring optimal resource allocation.
The architectural design of Borg, as shown in the image below directly from the paper, bears a notable resemblance to Kubernetes. This similarity is expected, given Kubernetes drew inspiration from Borg&amp;rsquo;s architecture.</description></item><item><title>Iptables explore, implement virtual IP</title><link>https://zhengxin.online/posts/iptables/</link><pubDate>Sun, 28 Apr 2024 00:00:00 +0000</pubDate><guid>https://zhengxin.online/posts/iptables/</guid><description>What is netfilter In 1999, the Linux kernel was augmented with netfilter, a robust framework designed to empower users with the capability to tailor network packet processing within kernel space. Netfilter introduces five pivotal hooks distributed at key stages of the network packet&amp;rsquo;s journey, providing functionality ranging from packet filtering to network address translation. The hooks are as follows:
PREROUTING INPUT FORWARD OUTPUT POSTROUTING Packets arriving at the host are processed through the PREROUTING -&amp;gt; INPUT sequence, while packets originating from the host follow the OUTPUT -&amp;gt; POSTROUTING path.</description></item><item><title>Kubernetes networking: network namespace, veth pair and bridge</title><link>https://zhengxin.online/posts/kubernetes_networking_1/</link><pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate><guid>https://zhengxin.online/posts/kubernetes_networking_1/</guid><description>Kubernetes guarantees that each pod in the cluster has a unique IP address, and they can can communicate with each other using this IP address directly. You may wonder how this is achieved. We will have a series of posts that will explain how networking works in Kubernetes. And this is the first post in the series, which will explain three fundamental concepts: network namespace, veth, and bridge, that are the building blocks of Kubernetes (and container) networking.</description></item></channel></rss>